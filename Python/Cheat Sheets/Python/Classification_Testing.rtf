{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Classification Test: df['text'] & df['total_votes']\
To Predict the Total Votes based on the Users Review that they put in themselves. \
Create X & y train variables from Original df. \
\
- Taking First 10,000 Rows of df['text'] for X_train.\
        \
- Taking First 10,000 Rows of df['total_votes'] for y_train.\
 \
Take a Random Review from DF to Test. \
\
- df['text'][45889]\
\
\
# Creating Training DFs:\
text_train = df.text[0:10000]\
vote_train = df.total_votes[0:10000]\
\
# Training:\
X_train = text_train\
y_train = vote_train\
\
# Testing: \
random_test = df['text'][45889]\
\
print(X_train.shape)\
print(y_train.shape)\
print(random_test)\
\
\
# Imports\
from sklearn.pipeline import Pipeline\
from sklearn.ensemble import RandomForestClassifier\
from sklearn.model_selection import GridSearchCV\
from sklearn.feature_extraction.text import TfidfVectorizer\
\
\
# Create Pipeline Components\
\
vect = TfidfVectorizer(stop_words='english')\
rfc = RandomForestClassifier()\
\
\
# Define the Pipeline\
pipe = Pipeline([\
                 #Vectorizer\
                 ('vect', vect), \
                 # Classifier\
                 ('clf', rfc)\
                ])\
\
#Tuning\
parameters = \{\
    'vect__max_df': ( 0.75, 1.0),\
    'vect__min_df': (.02, .05),\
    'vect__max_features': (500,1000),\
    'clf__n_estimators':(5, 10,),\
    'clf__max_depth':(15,20)\
\}\
\
grid_search = GridSearchCV(pipe,parameters, cv=5, n_jobs=-1, verbose=1)\
grid_search.fit(X_train, y_train)\
\
}